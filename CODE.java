/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package facebook;

import java.awt.Color;
import java.awt.Font;
import java.awt.GraphicsEnvironment;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.net.URL;
import static javafx.scene.paint.Color.color;
import static javafx.scene.paint.Color.color;
import static javafx.scene.paint.Color.color;
import static javafx.scene.paint.Color.color;
import javax.swing.ImageIcon;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class texteditor extends javax.swing.JFrame {

    /**
     * Creates new form texteditor
     */
    public texteditor() {
        initComponents();
    }
File file;
File filesave;
int OPENED=0;
String AFTERSAVE="";
int EVERSAVED=0;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TEXTAREA = new javax.swing.JTextArea();
        fontselect = new javax.swing.JComboBox();
        typeselect = new javax.swing.JComboBox();
        sizeselect = new javax.swing.JComboBox();
        colorselect = new javax.swing.JButton();
        click = new javax.swing.JButton();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu5 = new javax.swing.JMenu();
        OPEN = new javax.swing.JMenuItem();
        TRUESAVE = new javax.swing.JMenuItem();
        SAVEAS = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        TEXTAREA.setColumns(20);
        TEXTAREA.setRows(5);
        jScrollPane1.setViewportView(TEXTAREA);

        fontselect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fontselectActionPerformed(evt);
            }
        });

        typeselect.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Plain", "Bold", "Italic" }));

        sizeselect.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "8", "10", "12", "14", "16", "18", "20", "22", "24", "26", "28", "32", "36", "40", "56", "72", " " }));
        sizeselect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sizeselectActionPerformed(evt);
            }
        });

        colorselect.setText("color");
        colorselect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorselectActionPerformed(evt);
            }
        });

        click.setText("click");
        click.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clickActionPerformed(evt);
            }
        });

        jMenu5.setText("File");

        OPEN.setText("Open");
        OPEN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OPENActionPerformed(evt);
            }
        });
        jMenu5.add(OPEN);

        TRUESAVE.setText("Save");
        TRUESAVE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TRUESAVEActionPerformed(evt);
            }
        });
        jMenu5.add(TRUESAVE);

        SAVEAS.setText("Save As");
        SAVEAS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SAVEASActionPerformed(evt);
            }
        });
        jMenu5.add(SAVEAS);

        jMenuItem1.setText("New");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem1);

        jMenuBar2.add(jMenu5);

        jMenu6.setText("Edit");
        jMenuBar2.add(jMenu6);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(fontselect, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(typeselect, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sizeselect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(colorselect, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(click, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(fontselect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(click, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                        .addComponent(colorselect)
                        .addComponent(sizeselect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(typeselect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void OPENActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
        OPENED=1;
        JFileChooser ch=new JFileChooser();
        ch.showOpenDialog(null);
        file = ch.getSelectedFile();
        System.out.println(file);
        
        
        
        //URL url;
            try
            {
                /*url=file.toURI().toURL();
                System.out.println(url);*/
                
                TEXTAREA.setText("");
                
                FileInputStream fis=new FileInputStream(file);
                
                
                int i=1;
                char m;
                
                while((i=fis.read())!=-1)
                {
                    m=(char)i;
                    TEXTAREA.setText(TEXTAREA.getText()+m+"");
                
                }
                /*ImageIcon icon=new ImageIcon(url);
                Image img=icon.getImage().getScaledInstance(120, 130, Image.SCALE_DEFAULT);
                ImageIcon icon1=new ImageIcon(img);*/
                
                
            }
            
            catch(Exception e)
                    {
                        System.out.println(e);
                    }
        
        
        
        
        
        
        
        
    }                                    

    private void SAVEASActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
        EVERSAVED=1;
         JFileChooser ch=new JFileChooser();
        ch.showSaveDialog(null);
        filesave = ch.getSelectedFile();
        System.out.println(file);
        
        String write="";
        
        write=TEXTAREA.getText();
        
        try{
			FileOutputStream fos=new FileOutputStream(filesave);
                        
			byte b[]=write.getBytes();
			fos.write(b);
			fos.close();
        }
        
        
        catch(Exception e)
        {
            System.out.println(e);
        }
        
        AFTERSAVE=write;
    }                                      

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        int i;
        String check="";
        check=TEXTAREA.getText();
        
        System.out.println(AFTERSAVE);
        System.out.println(check);
        
        if(!AFTERSAVE.equals(check)){
        
        
        
        i=JOptionPane.showConfirmDialog(rootPane,"DO YOU WANT TO SAVE THE FILE");
        
        System.out.println(i);
        
        if(i==0)
        {
            if(OPENED==0)
            {
         JFileChooser ch=new JFileChooser();
        ch.showSaveDialog(null);
        filesave = ch.getSelectedFile();
            }
            
            else
            {
                filesave=file;
            }
        System.out.println(file);
        
        String write="";
        
        write=TEXTAREA.getText();
        
        try{
			FileOutputStream fos=new FileOutputStream(filesave);
                        
			byte b[]=write.getBytes();
			fos.write(b);
			fos.close();
        }
        
        
        catch(Exception e)
        {
            System.out.println(e);
        }
        
        AFTERSAVE=write;
            

        
        
        
        }
        
        
                    
        if(i==1)
        {
            texteditor n=new texteditor();
            n.setVisible(true);
            setVisible(false);
        }
        }
        
        else
        {
            texteditor n=new texteditor();
            n.setVisible(true);
            setVisible(false);
        }
        
        
    }                                          

    private void TRUESAVEActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        if(OPENED==0)
        {
         JFileChooser ch=new JFileChooser();
        ch.showSaveDialog(null);
        filesave = ch.getSelectedFile();
        }
        
        else
        {
        filesave=file;
        }
        System.out.println(file);
        
        String write="";
        
        write=TEXTAREA.getText();
        
        try{
			FileOutputStream fos=new FileOutputStream(filesave);
                        
			byte b[]=write.getBytes();
			fos.write(b);
			fos.close();
        }
        
        
        catch(Exception e)
        {
            System.out.println(e);
        }
            
        AFTERSAVE=write;
        
        
        
        
        
    }                                        

    private void formWindowOpened(java.awt.event.WindowEvent evt) {                                  
        // TODO add your handling code here:
        
        int i;
        int l;
   String fonts[]=GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames();
   
   l=fonts.length;
   
   for( i=0 ; i<l ; i++ )
   {
       fontselect.addItem(fonts[i]);
   }
   
        
        
        
    }                                 

    private void fontselectActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void sizeselectActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void colorselectActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
        
        Color backgroundcolor=JColorChooser.showDialog(this,"CHOOSE TEXT COLOR", Color.white);
        if(backgroundcolor!=null)
        {
            TEXTAREA.setForeground(backgroundcolor);
        }
        
        
        
        
    }                                           

    private void clickActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
        
        int size=8;
        int type=0;
        String SIZE="";
        String variation="";
        //BOLD 1
        //ITALIC 2
        
        
        String select="Arial";
        
        
        SIZE=(String)sizeselect.getSelectedItem();
        size=Integer.parseInt(SIZE);
        
        variation=(String)typeselect.getSelectedItem();
        
        select=(String)fontselect.getSelectedItem();
        
        if("Plain".equals(variation))
        {
            type=0;
        }
        
        if("Bold".equals(variation))
        {
            type=1;
        }
        
        if("Italic".equals(variation))
        {
            type=2;
        }
        
        
        
        Font fo=new Font(select,type,size);
        
        TEXTAREA.setFont(fo);
        
        
        
    }                                     

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(texteditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(texteditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(texteditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(texteditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new texteditor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JMenuItem OPEN;
    private javax.swing.JMenuItem SAVEAS;
    private javax.swing.JTextArea TEXTAREA;
    private javax.swing.JMenuItem TRUESAVE;
    private javax.swing.JButton click;
    private javax.swing.JButton colorselect;
    private javax.swing.JComboBox fontselect;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox sizeselect;
    private javax.swing.JComboBox typeselect;
    // End of variables declaration                   
}
